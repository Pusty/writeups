import socket
import threading

server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
server.bind(('127.0.0.1', 9443))
server.listen(1)

print "Waiting.."

f = open("parsedpcap3.txt")
operationList = f.read().split("\n")[:-1]
f.close()

"""
def serve_malwarez(client):
    currentOp = 0
    while currentOp < len(operationList):
        current = operationList[currentOp]
        if "R" in current:
            current = current[1:].decode("hex")
            print("["+str(currentOp)+"]: "+client.recv(len(current)))
        else:
            current = current.decode("hex")
            client.send(current)
        currentOp+=1
    print("Done..")
    client.close()
"""

def serve_malwarez(client):
    currentOp = 0
    overwriteMode = False
    while currentOp < len(operationList):
        current = operationList[currentOp]
        
        """if currentOp == 4:
            overwriteMode = True
            overwriteWait = False
            currentOp = 5
            current = operationList[currentOp]"""
            
        if overwriteMode == False:
            if "R" in current:
                print("Waiting..")
                current = current[1:].decode("hex")
                m = client.recv(len(current))
            else:
                print("Sending packet..."+str(currentOp))
                current = current.decode("hex")
                client.send(current)
        else: 
            if "R" in current:
                current = current[1:].decode("hex")
                if current[3] == "\x8f" and overwriteWait == True:
                    print("Waiting...")
                    client.recv(5000)
                overwriteWait = True
                #current = "instered package".decode("hex")
                print("Sending packet..."+str(currentOp))
                client.send(current)
            else:
                pass
                #overwriteWait = True
                #print("Waiting...")
                #client.recv(5000)
        currentOp+=1
    print("Done..")
    client.close()

while True:
    s, a = server.accept()
    print "Accepted Connection!"
    client_thread = threading.Thread(target=serve_malwarez, args=(s,))
    client_thread.start()